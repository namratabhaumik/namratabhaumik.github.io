{
  "technical_skills": {
    "Languages": ["Python", "Javascript", "Java", "C#", "Bash", "HTML", "CSS"],
    "Technologies": [
      "Django",
      "FastAPI",
      "Flask",
      "Pydantic",
      "Node.js",
      "React",
      "jQuery",
      "OAuth",
      "JWT",
      "Firebase",
      "PyTest (unit + integration)",
      "Android Studio",
      "Unity",
      "Oculus",
      "Git",
      "Agile",
      "Jira",
      "Kanban",
      "REST",
      "Netlify",
      "PowerBI",
      "Tableau",
      "Figma",
      "D3.js",
      "Data Visualization"
    ],
    "Databases": [
      "BigQuery",
      "Firestore",
      "MySQL",
      "Postgresql",
      "MongoDb",
      "Elasticsearch"
    ],
    "Cloud & DevOps": [
      "GCP",
      "Docker",
      "Terraform (IaC)",
      "GitLab CI",
      "AWS",
      "Azure",
      "Github Actions",
      "Jenkins",
      "Linux",
      "Shell Scripting"
    ]
  },
  "education": [
    {
      "degree": "Master of Applied Computer Science",
      "university": "Dalhousie University",
      "gpa": "3.95/4.30",
      "timeline": "September '23 - December '24",
      "location": "Halifax, NS, Canada"
    },
    {
      "degree": "Bachelor of Technology - Computer Science and Engineering",
      "university": "SRM Institute of Science and Technology (SRMIST)",
      "gpa": "8.69/10.00",
      "timeline": "2017-2021",
      "location": "Chennai, India"
    }
  ],
  "experience": [
    {
      "role": "Software Engineer (Backend)",
      "company": "Publicus",
      "timeline": "April '25 - June '25",
      "location": "Toronto, ON, Canada",
      "description": [
        "Led backend migration to a modular polyrepo microservices architecture using Python, FastAPI, and GCP services (Firestore, BigQuery, Cloud Run, Cloud Functions, Pub/Sub).",
        "Built scalable RESTful APIs and microservices, ensuring smooth data ingestion, transformation, and secure file exports.",
        "Designed and executed robust test strategies (Pytest) and owned full-stack developer workflows, including GitLab CI/CD, Docker, and Terraform.",
        "Contributed to system architectural decisions, agile sprint planning, and daily team operations."
      ]
    },
    {
      "role": "Software Developer",
      "company": "Dalhousie Transportation Collaboratory (DalTrac)",
      "timeline": "September '24 - December '24",
      "location": "Halifax, NS, Canada",
      "description": [
        "Developed a Virtual Reality (VR) evacuation simulation game (Unity, Oculus Quest 2) to analyze pedestrian behavior during fire emergencies in downtown Halifax.",
        "Designed a detailed 3D city model and implemented VR interactivity with realistic environmental cues and 12 distinct evacuation scenarios.",
        "Programmed pedestrian AI behavior to simulate realistic crowd dynamics and developed dual player modes, including an accessibility-focused wheelchair mode.",
        "Integrated real-time data tracking for behavioral analysis, overcoming technical challenges in Oculus Quest integration and performance optimization."
      ]
    },
    {
      "role": "Software Engineer I",
      "company": "Cerner Corporation (Oracle Health)",
      "timeline": "July, 2021-July, 2023",
      "location": "Bangalore, India",
      "description": [
        "Optimized internal Wiki searchability by integrating Elasticsearch, improving speed and accuracy, and reducing new hire onboarding time by 40%.",
        "Owned and scaled a Python-Django automation framework supporting over 430 clinical data solutions, reducing data turnaround time by 5 days.",
        "Integrated RAPID APIs and optimized database interactions (MySQL, PostgreSQL) for enhanced search performance and data processing efficiency.",
        "Designed interactive Power BI dashboards to track employee training schedules, increasing tracking efficiency by 50%.",
        "Led data migration from SQL databases to Microsoft Azure, ensuring seamless integration and optimizing cloud storage."
      ]
    },
    {
      "role": "Software Engineer Intern",
      "company": "Cerner Corporation (Oracle Health)",
      "timeline": "Jan, 2021-July, 2021",
      "location": "Bangalore, India",
      "description": [
        "Developed a scalable RESTful API workflow (Java, Spring Framework) for GitHub issue management, reducing resolution time by 40%.",
        "Collaborated with cross-functional teams to integrate the API into existing workflows and implemented unit tests (JUnit) and CI/CD with Jenkins.",
        "Authored comprehensive API documentation and optimized the GitHub issue resolution process by automating repetitive tasks.",
        "Gained practical experience in Agile development, API design, backend development, and automation through mentorship and continuous learning."
      ]
    },
    {
      "role": "Software Engineer Intern",
      "company": "VAP Technology Pvt. LTD.",
      "timeline": "May, 2019-June, 2019",
      "location": "Kolkata, India",
      "description": [
        "Engineered an Android application with CRUD functionality using Java and Android Studio, working under senior supervision."
      ]
    }
  ],
  "projects": [
    {
      "name": "DalVacationHome",
      "tech_stack": "AWS, GCP, Terraform, Node.js, React.js",
      "description": [
        "A cross-cloud distributed system using AWS IAM, Lambda, Cognito, Dynamodb, S3, Lex, SNS/SQS, CloudFormation, GCP Pub/Sub, Functions, Cloud Run and IaC (Terraform, Docker).",
        "Developed a cloud-native vacation rental platform leveraging AWS (SNS, SQS) and GCP (Pub/Sub) for efficient, real-time messaging and event-driven architecture.",
        "Integrated AWS Lex to enable natural language interactions, enhancing the user experience with AI-powered conversational interfaces.",
        "Designed and deployed serverless functions for scalable backend processing, reducing operational overhead and optimizing resource usage.",
        "Automated deployment pipelines using CI/CD tools, ensuring seamless code integration and faster delivery cycles.",
        "Implemented Infrastructure as Code (IaC) with Terraform to manage cloud resources consistently across AWS and GCP environments.",
        "Containerized applications using Docker to ensure portability and maintainability across different deployment stages."
      ],
      "github": "https://github.com/namratabhaumik/DalVacation Home",
      "medium": "https://shorturl.at/RNrDc, https://shorturl.at/eoQxn"
    },
    {
      "name": "BlogIt",
      "tech_stack": "React.js, Python-Flask, Mongodb, Firebase, Netlify, Render",
      "description": [
        "Developed a full-stack blogging platform with my team implementing secure authentication, RESTful APIs, and dynamic content management for a seamless user experience.",
        "User Authentication: Implemented secure user authentication with Firebase Authentication, allowing users to sign up, log in, and securely manage sessions.",
        "Dynamic Content Management: Enabled users to create, edit, and delete blog posts through a dynamic user interface. Each blog post includes a title, content, and tags for better organization.",
        "RESTful APIs: Designed a set of RESTful APIs using Flask to manage blog data. These APIs handle CRUD (Create, Read, Update, Delete) operations for blog posts, allowing for easy integration and scalability.",
        "Real-time Updates: Leveraged Firebase Realtime Database for live updates on blog comments and post interactions, ensuring users have an engaging, interactive experience.",
        "Responsive Design: Developed a responsive design using CSS and Bootstrap, ensuring compatibility with both desktop and mobile devices.",
        "Error Handling and Logging: Incorporated error handling mechanisms and utilized Flask's logging functionality for debugging and improving the overall user experience."
      ],
      "github": "https://github.com/namratabhaumik/BlogIt",
      "medium": "https://shorturl.at/F3uNh"
    },
    {
      "name": "Mealmate",
      "tech_stack": "Android Studio, Java, Firebase",
      "description": [
        "An Android app for meal planning, recommending and sharing recipes.",
        "Meal Planning & Recipe Recommendations: Users can browse through a variety of recipes, each accompanied by ingredients, instructions, and estimated cooking times. The app intelligently recommends recipes based on user preferences, dietary restrictions, and available ingredients.",
        "Interactive Ingredient Inventory Management: Implemented an ingredient inventory system where users can track what ingredients they have at home, allowing the app to suggest recipes based on the ingredients they already possess.",
        "Sharing and Community Interaction: Enabled users to share their own recipes with others. Users can upload their recipes, photos, and tips, fostering a sense of community among cooking enthusiasts.",
        "Firebase Integration: Leveraged Firebase Authentication for secure login and user management, Firestore to store and retrieve user data such as recipes and preferences, and Firebase Cloud Functions to add custom backend functionality like sending notifications for new recipe suggestions.",
        "User-friendly UI: Focused on delivering an intuitive, sleek UI that made it easy for users to navigate through recipes, meal plans, and ingredient lists. The app's design was optimized for both performance and aesthetic appeal, ensuring a smooth experience for the user.",
        "Agile Development: Employed an Agile methodology with two-week sprints to iterate on features and prioritize user stories. Regular scrum meetings kept the team aligned, while feedback from the client ensured the app met real-world needs and expectations."
      ],
      "github": "https://github.com/namratabhaumik/MealMate",
      "medium": "https://shorturl.at/zz8qO"
    },
    {
      "name": "ExpenseTrackerExtended",
      "tech_stack": "AWS, GCP, Kubernetes, Docker, React.js, Python-Django",
      "description": [
        "A cloud-native expense tracking platform leveraging AWS (Cognito, DynamoDB, S3, SNS, IAM), Docker, Kubernetes (EKS), and Python-Django/React for a distributed, secure, and scalable architecture.",
        "Cloud-Native & Serverless: Architected a hybrid serverless and containerized backend-using AWS Lambda for event-driven logic and Django REST APIs on GCP Cloud Run-integrated with DynamoDB, S3, and Cognito for secure, scalable data and file management.",
        "CI/CD & DevOps: Automated build, test, and deployment pipelines with GitHub Actions, enabling seamless delivery to Firebase (frontend) and GCP Cloud Run (backend), with robust test coverage and environment parity via Docker.",
        "AWS Integration: Orchestrated secure inter-service communication using IAM roles, S3 event notifications, and SNS for real-time alerts; implemented CloudWatch logging for monitoring and debugging.",
        "Frontend & API Security: Developed a responsive React frontend with Cognito-authenticated API requests, ensuring secure, smooth user experiences and robust JWT-based access control.",
        "Kubernetes & Networking: Deployed containerized services on AWS EKS with secure VPC networking, load balancing, and auto-scaling for high availability and cost efficiency.",
        "Documentation & Testing: Consolidated and enhanced project documentation (README), implemented comprehensive unit/integration tests with mocked AWS services, and maintained high code quality standards.",
        "Cost Optimization & Scalability: Designed the architecture to operate efficiently within the AWS Free Tier, optimizing resource allocation for cost-effectiveness, while enabling auto-scaling for both serverless functions and Kubernetes pods to handle varying traffic loads, ensuring high availability and performance.",
        "Future Roadmap: Planning CloudFront CDN integration, advanced analytics, and further UI/UX improvements."
      ],
      "github": "https://github.com/namratabhaumik/ExpenseTrackerExtended",
      "medium": "https://rb.gy/9n47b5, https://rb.gy/g1ibvd, https://rb.gy/acto8p"
    }
  ]
}
